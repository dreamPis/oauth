/*
 * This file is generated by jOOQ.
*/
package club.ndt.oauth.boot.entity;


import club.ndt.oauth.boot.entity.tables.OauthAccessToken;
import club.ndt.oauth.boot.entity.tables.OauthClientDetails;
import club.ndt.oauth.boot.entity.tables.OauthCode;
import club.ndt.oauth.boot.entity.tables.OauthRefreshToken;
import club.ndt.oauth.boot.entity.tables.TPersonalDetail;
import club.ndt.oauth.boot.entity.tables.TUser;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ndt extends SchemaImpl {

    private static final long serialVersionUID = 475539677;

    /**
     * The reference instance of <code>ndt</code>
     */
    public static final Ndt NDT = new Ndt();

    /**
     * The table <code>ndt.oauth_access_token</code>.
     */
    public final OauthAccessToken OAUTH_ACCESS_TOKEN = club.ndt.oauth.boot.entity.tables.OauthAccessToken.OAUTH_ACCESS_TOKEN;

    /**
     * The table <code>ndt.oauth_client_details</code>.
     */
    public final OauthClientDetails OAUTH_CLIENT_DETAILS = club.ndt.oauth.boot.entity.tables.OauthClientDetails.OAUTH_CLIENT_DETAILS;

    /**
     * The table <code>ndt.oauth_code</code>.
     */
    public final OauthCode OAUTH_CODE = club.ndt.oauth.boot.entity.tables.OauthCode.OAUTH_CODE;

    /**
     * The table <code>ndt.oauth_refresh_token</code>.
     */
    public final OauthRefreshToken OAUTH_REFRESH_TOKEN = club.ndt.oauth.boot.entity.tables.OauthRefreshToken.OAUTH_REFRESH_TOKEN;

    /**
     * 个人用户详情表
     */
    public final TPersonalDetail T_PERSONAL_DETAIL = club.ndt.oauth.boot.entity.tables.TPersonalDetail.T_PERSONAL_DETAIL;

    /**
     * 用户表
     */
    public final TUser T_USER = club.ndt.oauth.boot.entity.tables.TUser.T_USER;

    /**
     * No further instances allowed
     */
    private Ndt() {
        super("ndt", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            OauthAccessToken.OAUTH_ACCESS_TOKEN,
            OauthClientDetails.OAUTH_CLIENT_DETAILS,
            OauthCode.OAUTH_CODE,
            OauthRefreshToken.OAUTH_REFRESH_TOKEN,
            TPersonalDetail.T_PERSONAL_DETAIL,
            TUser.T_USER);
    }
}
